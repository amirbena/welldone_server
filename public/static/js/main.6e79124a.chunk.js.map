{"version":3,"sources":["redux/action-types.js","redux/actions/index.js","components/createCategory/createCategory.js","components/allCategories/deleteCategoryDialog/deleteCategoryDialog.js","components/allCategories/categoryDetails/categoryDetails.js","components/allCategories/editCategory/editCategory.js","components/allCategories/category/category.js","components/allCategories/allCategories.js","App.js","constants/localStorageKeys.js","redux/reducers/createAndGetDict.js","redux/reducers/enableDict.js","redux/reducers/deleteDict.js","redux/reducers/editDict.js","redux/reducers/visibiltiesDict.js","redux/initial-state.js","redux/reducers/index.js","redux/store.js","reportWebVitals.js","index.js"],"names":["SELECT_ITEM","DESELECT_ITEM","CREATE_CATEGORY","EDIT_CATEGORY","DELETE_CATEGORY","CHANGE_TEXT_CREATE","CHANGE_TEXT_EDIT","CREATE_POPUP_VISIBILTY","EDIT_POPUP_VISIBILTY","DETAILS_POPUP_VISIBILTY","DELETE_POPUP_VISIBILTY","DELETE_DIALOG_VISIBILTY","CHANGE_EDIT_BAR_VISIBILTY","GET_CATEGORIES_FROM_LOCAL_STORAGE","changeCreationText","text","type","ActionTypes","payload","changeEditBarVisibiltity","destVisibility","setCreatePopupVisibilty","setEditPopupVisibilty","setDetailsPopupVisibilty","setDeletePopupVisibilty","setDeleteDialogVisibilty","Alert","props","elevation","variant","CreateCategory","dispatch","useDispatch","createText","useSelector","state","categoryCreate","history","useHistory","createPopupVisibilty","visibilties","Grid","container","xs","justify","item","TextField","label","value","onChange","e","target","style","marginTop","spacing","Button","color","onClick","push","disabled","Snackbar","open","autoHideDuration","onClose","severity","DeleteDialog","deleteDialogVisibilty","handleClose","Dialog","DialogTitle","DialogActions","autoFocus","ShowCategory","editText","categoryEdit","detailsPopupVisibilty","DialogContent","EditCategory","editVisible","preventDefault","changeEditText","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","useStyles","makeStyles","selected","StyledTableRow","root","action","hover","TableRow","Category","category","selectedId","classes","id","clicked","margin","extendedIcon","marginRight","AllCategories","categories","categoriesData","enables","editPopupVisibilty","deletePopupVisibilty","editDisabled","createDisabled","viewDisabled","deleteDisabled","openEditWindow","openDetailsWindow","openDeleteDialog","handleCloseEditSuccessPopup","handleCloseDeleteSuccessPopup","ActionButtons","className","Fab","aria-label","size","Add","Edit","Info","Delete","marginLeft","TableContainer","component","Paper","Table","TableHead","align","TableBody","map","index","App","useEffect","path","CreateCatergory","from","to","CATEGORIES","createAndGetDict","stringifiedCategories","localStorage","getItem","JSON","parse","length","setItem","stringify","changeDisablesValue","destinationVal","enablesDict","newCategories","i","findIndex","deleteDict","deletedCategories","filter","editDict","editedCategories","indexFound","visibiltiesDict","initialState","reducer","bigDictionary","updateStore","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e79124a.chunk.js","sourcesContent":["\r\n\r\nexport const SELECT_ITEM = \"selectItem\";\r\nexport const DESELECT_ITEM = \"deSelectItem\";\r\n\r\nexport const CREATE_CATEGORY = \"insertCategory\";\r\nexport const EDIT_CATEGORY = \"editCategory\";\r\nexport const DELETE_CATEGORY = \"deleteCategory\";\r\n\r\nexport const CHANGE_TEXT_CREATE = \"changeCreateText\";\r\nexport const CHANGE_TEXT_EDIT = \"changeEditText\";\r\n\r\nexport const CREATE_POPUP_VISIBILTY = \"createPopupVisibilty\";\r\nexport const EDIT_POPUP_VISIBILTY = \"editPopupVisibilty\";\r\nexport const DETAILS_POPUP_VISIBILTY = \"detailsPopupVisibilty\";\r\nexport const DELETE_POPUP_VISIBILTY = \"deletePopupVisibilty\";\r\nexport const DELETE_DIALOG_VISIBILTY = \"deleteDialogVisibilty\";\r\n\r\nexport const CHANGE_EDIT_BAR_VISIBILTY = \"editBarVisibilty\";\r\n\r\nexport const GET_CATEGORIES_FROM_LOCAL_STORAGE = \"categoriesFromLocalStorage\";","import * as ActionTypes from '../action-types';\r\n\r\n\r\nexport const getCategoriesFromLocalStorage = () => {\r\n    return {\r\n        type: ActionTypes.GET_CATEGORIES_FROM_LOCAL_STORAGE,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport const createCategoryAction = () => {\r\n    return {\r\n        type: ActionTypes.CREATE_CATEGORY,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport const changeCreationText = text => {\r\n    return {\r\n        type: ActionTypes.CHANGE_TEXT_CREATE,\r\n        payload: { text }\r\n    }\r\n}\r\n\r\nexport const deleteSelectedCategory = () => {\r\n    return {\r\n        type: ActionTypes.DELETE_CATEGORY,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport const changeEditBarVisibiltity = destVisibility => {\r\n    return {\r\n        type: ActionTypes.CHANGE_EDIT_BAR_VISIBILTY,\r\n        payload: { destVisibility }\r\n    }\r\n}\r\n\r\nexport const editCategoryAction = () => {\r\n    return {\r\n        type: ActionTypes.EDIT_CATEGORY,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport const changeEditText = text => {\r\n    return {\r\n        type: ActionTypes.CHANGE_TEXT_EDIT,\r\n        payload: { text }\r\n    }\r\n}\r\n\r\nexport const selectItem = id => {\r\n    return {\r\n        type: ActionTypes.SELECT_ITEM,\r\n        payload: { id }\r\n    }\r\n\r\n}\r\n\r\nexport const setCreatePopupVisibilty = destVisibility => {\r\n    return {\r\n        type: ActionTypes.CREATE_POPUP_VISIBILTY,\r\n        payload: { destVisibility }\r\n    }\r\n}\r\n\r\nexport const setEditPopupVisibilty = destVisibility => {\r\n    return {\r\n        type: ActionTypes.EDIT_POPUP_VISIBILTY,\r\n        payload: { destVisibility }\r\n    }\r\n}\r\n\r\nexport const setDetailsPopupVisibilty = destVisibility => {\r\n    return {\r\n        type: ActionTypes.DETAILS_POPUP_VISIBILTY,\r\n        payload: { destVisibility }\r\n    }\r\n}\r\n\r\nexport const setDeletePopupVisibilty = destVisibility => {\r\n    return {\r\n        type: ActionTypes.DELETE_POPUP_VISIBILTY,\r\n        payload: { destVisibility }\r\n    }\r\n}\r\n\r\nexport const setDeleteDialogVisibilty = destVisibility => {\r\n    return {\r\n        type: ActionTypes.DELETE_DIALOG_VISIBILTY,\r\n        payload: { destVisibility }\r\n    }\r\n}\r\n\r\nexport const unselectItem = () => {\r\n    return {\r\n        type: ActionTypes.DESELECT_ITEM,\r\n        payload: {}\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TextField, Grid, Button, Snackbar } from '@material-ui/core';\r\nimport { changeCreationText, createCategoryAction, setCreatePopupVisibilty } from '../../redux/actions'\r\nimport { useHistory } from 'react-router';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nexport function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst CreateCategory = () => {\r\n    const dispatch = useDispatch();\r\n    const { createText } = useSelector(state => state.categoryCreate);\r\n    const history = useHistory();\r\n    const { createPopupVisibilty } = useSelector(state => state.visibilties);\r\n\r\n    const autoHideDuration = 4000;\r\n\r\n    const handleClick = () => {\r\n        dispatch(createCategoryAction());\r\n        dispatch(setCreatePopupVisibilty(true));\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const handleClose = () => {\r\n        dispatch(setCreatePopupVisibilty(false));\r\n    }\r\n    const changeText = e => {\r\n        const { value: text } = e.target;\r\n        dispatch(changeCreationText(text));\r\n    }\r\n\r\n    const returnToCategories = () => {\r\n        dispatch(changeCreationText(\"\"));\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <Grid container xs={12}>\r\n            <Grid container justify=\"center\">\r\n                <h1>Add New Category</h1>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" >\r\n                <Grid item xs={3}>\r\n                    <h3>Category Name</h3>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <TextField label=\"Category Name\" value={createText} onChange={changeText} variant=\"outlined\" />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container style={{ marginTop: \"20px\" }} justify=\"center\" spacing={4}>\r\n                <Grid item>\r\n                    <Button color=\"secondary\" variant=\"contained\" onClick={returnToCategories}>To Categories</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" disabled={createText === \"\"} onClick={handleClick}>Add Category</Button>\r\n                </Grid>\r\n               \r\n            </Grid>\r\n\r\n            <Snackbar open={createPopupVisibilty} autoHideDuration={autoHideDuration} >\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Category Added Succesfully\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateCategory;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { Dialog, DialogTitle, DialogActions, Button } from '@material-ui/core';\r\nimport { setDeleteDialogVisibilty, deleteSelectedCategory, setDeletePopupVisibilty } from '../../../redux/actions';\r\n\r\n\r\nconst DeleteDialog = () => {\r\n    const { deleteDialogVisibilty } = useSelector(state => state.visibilties);\r\n    const dispatch = useDispatch();\r\n    const handleClose = () => {\r\n        dispatch(setDeleteDialogVisibilty(false))\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deleteSelectedCategory());\r\n        handleClose();\r\n        dispatch(setDeletePopupVisibilty(true));\r\n    };\r\n\r\n    return (\r\n        <Dialog open={deleteDialogVisibilty} onClose={handleClose}>\r\n            <DialogTitle>Are you sure to delete?</DialogTitle>\r\n            <DialogActions>\r\n                <Button onClick={handleDelete} color=\"secondary\">\r\n                    Delete\r\n                </Button>\r\n                <Button onClick={handleClose} autoFocus color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default DeleteDialog;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { Dialog, DialogTitle, DialogContent, Grid, DialogActions, Button, TextField } from '@material-ui/core';\r\nimport { setDetailsPopupVisibilty } from '../../../redux/actions';\r\n\r\n\r\nconst ShowCategory = () => {\r\n    const { editText, detailsPopupVisibilty } = useSelector(state => {\r\n        return {\r\n            editText: state.categoryEdit.editText,\r\n            detailsPopupVisibilty: state.visibilties.detailsPopupVisibilty\r\n        }\r\n    });\r\n    const dispatch = useDispatch();\r\n    const handleClose = () => dispatch(setDetailsPopupVisibilty(false));\r\n\r\n\r\n    return (\r\n        <Dialog open={detailsPopupVisibilty} onClose={handleClose}>\r\n            <DialogTitle>Show Category</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container xs={12}>\r\n                    <Grid item xs={6}>\r\n                        <p>Category Name</p>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField label=\"Category Name\" disabled value={editText} variant=\"filled\" />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} autoFocus color=\"secondary\">\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ShowCategory;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { Dialog, DialogTitle, DialogContent, Grid, DialogActions, Button, TextField } from '@material-ui/core';\r\nimport { changeEditBarVisibiltity, changeEditText, editCategoryAction, setEditPopupVisibilty } from '../../../redux/actions'\r\n\r\n\r\nconst EditCategory = () => {\r\n    const { editVisible, editText } = useSelector(state => state.categoryEdit);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => dispatch(changeEditBarVisibiltity(false));\r\n\r\n\r\n    const onEditText = e => {\r\n        e.preventDefault();\r\n        const { value: text } = e.target;\r\n        dispatch(changeEditText(text));\r\n    }\r\n\r\n    const editCategory = () => {\r\n        dispatch(editCategoryAction());\r\n        dispatch(setEditPopupVisibilty(true));\r\n    }\r\n\r\n    return (\r\n        <Dialog open={editVisible}>\r\n            <DialogTitle>Edit Category</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container xs={12}>\r\n                    <Grid item xs={6}>\r\n                        <p>Category Name</p>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField label=\"Category Name\" value={editText} onChange={onEditText} variant=\"filled\" />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={editCategory} color=\"primary\">\r\n                    Edit\r\n                    </Button>\r\n                <Button onClick={handleClose} autoFocus color=\"secondary\">\r\n                    Cancel\r\n                    </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default EditCategory;","import { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { TableCell, TableRow } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectItem, unselectItem } from '../../../redux/actions'\r\n\r\nexport const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    selected: {\r\n        backgroundColor: \"pink !important\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"pink !important\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n\r\n    },\r\n}))(TableRow);\r\n\r\n\r\nconst Category = ({ category }) => {\r\n    const selectedId = useSelector(state => state.selectedId);\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useStyles();\r\n    const chooseRow = () => {\r\n        dispatch(!category.clicked ? selectItem(category.id) : unselectItem());\r\n    }\r\n\r\n    return (\r\n        <StyledTableRow onClick={chooseRow} selected={selectedId === category.id} classes={{selected: classes.selected,}}>\r\n            <StyledTableCell>\r\n                {category.text}\r\n            </StyledTableCell>\r\n        </StyledTableRow>\r\n    );\r\n\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Table, TableBody, Fab, TableContainer, Paper, TableHead, Snackbar } from '@material-ui/core';\r\nimport { Add as AddIcon, Edit as EditIcon, Info as InfoIcon, Delete as DeleteIcon } from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    setDeletePopupVisibilty, changeEditBarVisibiltity,\r\n    setDetailsPopupVisibilty, setDeleteDialogVisibilty, setEditPopupVisibilty,\r\n\r\n\r\n} from '../../redux/actions';\r\nimport { Alert } from '../createCategory/createCategory';\r\nimport DeleteCategoryDialog from './deleteCategoryDialog/deleteCategoryDialog';\r\nimport CategoryDetails from './categoryDetails/categoryDetails';\r\nimport EditCategory from './editCategory/editCategory';\r\nimport Category, { StyledTableCell, StyledTableRow } from './category/category';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nconst AllCategories = () => {\r\n    const { categories, editPopupVisibilty, deletePopupVisibilty,\r\n        editDisabled, createDisabled, viewDisabled, deleteDisabled } = useSelector(state => {\r\n            const { categories } = state.categoriesData;\r\n            return { categories, ...state.visibilties, ...state.enables };\r\n        });\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    const openEditWindow = () => dispatch(changeEditBarVisibiltity(true));\r\n    const openDetailsWindow = () => dispatch(setDetailsPopupVisibilty(true));\r\n    const openDeleteDialog = () => dispatch(setDeleteDialogVisibilty(true));\r\n\r\n    const handleCloseEditSuccessPopup = () => {\r\n        dispatch(setEditPopupVisibilty(false));\r\n    }\r\n\r\n    const handleCloseDeleteSuccessPopup = () => {\r\n        dispatch(setDeletePopupVisibilty(false));\r\n    }\r\n    const autoHideDuration = 4000;\r\n\r\n\r\n    const ActionButtons = () => {\r\n        return (\r\n            <div className={classes.root}>\r\n                <Fab color=\"primary\" aria-label=\"add\" disabled={createDisabled} size=\"small\" onClick={() => history.push('/add-category')}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                <Fab color=\"primary\" aria-label=\"edit\" disabled={editDisabled} size=\"small\" onClick={openEditWindow}>\r\n                    <EditIcon />\r\n                </Fab>\r\n                <Fab color=\"primary\" disabled={viewDisabled} size=\"small\" onClick={openDetailsWindow}>\r\n                    <InfoIcon />\r\n                </Fab>\r\n                <Fab color=\"secondary\" disabled={deleteDisabled} size=\"small\" onClick={openDeleteDialog}>\r\n                    <DeleteIcon />\r\n                </Fab>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Grid container xs={10} justify=\"center\">\r\n            <Grid container justify=\"center\">\r\n                <h1>All Categories</h1>\r\n            </Grid>\r\n            <Grid container justify=\"flex-end\">\r\n                <ActionButtons />\r\n            </Grid>\r\n\r\n            <Grid container style={{marginLeft: \"10px\"}}>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <StyledTableCell>\r\n                                <StyledTableRow align=\"right\"><h1>Category Name</h1></StyledTableRow>\r\n                            </StyledTableCell>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {categories.map((category, index) => (\r\n                                <Category key={\"C\" + index} category={category} />\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n                </TableContainer>\r\n            </Grid>\r\n\r\n            <DeleteCategoryDialog />\r\n            <CategoryDetails />\r\n            <EditCategory />\r\n            <Snackbar open={editPopupVisibilty} autoHideDuration={autoHideDuration} onClose={handleCloseEditSuccessPopup}>\r\n                <Alert onClose={handleCloseEditSuccessPopup} severity=\"success\">\r\n                    Category Edited Succesfully\r\n                </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={deletePopupVisibilty} autoHideDuration={autoHideDuration} onClose={handleCloseDeleteSuccessPopup}>\r\n                <Alert onClose={handleCloseDeleteSuccessPopup} severity=\"success\">\r\n                    Category Deleted Succesfully\r\n                </Alert>\r\n            </Snackbar>\r\n        </Grid>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default AllCategories;","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCategoriesFromLocalStorage } from './redux/actions';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport AllCategories from './components/allCategories/allCategories';\nimport CreateCatergory from './components/createCategory/createCategory';\nimport './App.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategoriesFromLocalStorage());\n  }, [])\n  return (\n    <div className=\"App\">\n      <main>\n        <Switch>\n          <Route path=\"/categories\" component={AllCategories} />\n          <Route path=\"/add-category\" component={CreateCatergory} />\n          <Redirect from=\"/\" to=\"/categories\" />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nexport const CATEGORIES = \"categories\";","import { CATEGORIES } from '../../constants/localStorageKeys';\r\nimport { CREATE_CATEGORY, CHANGE_TEXT_CREATE, GET_CATEGORIES_FROM_LOCAL_STORAGE } from '../action-types';\r\n\r\nconst createAndGetDict = {\r\n    [GET_CATEGORIES_FROM_LOCAL_STORAGE]: (state, action) => {\r\n        const stringifiedCategories = localStorage.getItem(CATEGORIES);\r\n        if (!stringifiedCategories) return state;\r\n        const categories = JSON.parse(stringifiedCategories);\r\n        return {\r\n            ...state,\r\n            categoriesData: {\r\n                categories,\r\n                id: categories.length\r\n            }\r\n        }\r\n    },\r\n    [CREATE_CATEGORY]: (state, action) => {\r\n        const { id } = state.categoriesData;\r\n        const { createText: text } = state.categoryCreate\r\n        const category = {\r\n            id,\r\n            text,\r\n            clicked: false\r\n        }\r\n        const categories = [...state.categoriesData.categories, category];\r\n        localStorage.setItem(CATEGORIES,JSON.stringify(categories));\r\n        return {\r\n            ...state,\r\n            categoriesData: {\r\n                categories,\r\n                id: id + 1,\r\n            },\r\n            categoryCreate: {\r\n                createText: \"\"\r\n            }\r\n        }\r\n    },\r\n    [CHANGE_TEXT_CREATE]: (state, action) => {\r\n        const { text: createText } = action.payload;\r\n        return {\r\n            ...state,\r\n            categoryCreate: {\r\n                createText\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default createAndGetDict;","import { SELECT_ITEM, DESELECT_ITEM } from '../action-types'\r\n\r\n\r\nexport const changeDisablesValue = (state, destinationVal) => {\r\n    return {\r\n        ...state.enables,\r\n        editDisabled: destinationVal,\r\n        createDisabled: !destinationVal,\r\n        viewDisabled: destinationVal,\r\n        deleteDisabled: destinationVal\r\n    }\r\n}\r\n\r\nconst enablesDict = {\r\n    [SELECT_ITEM]: (state, action) => {\r\n        const { id } = action.payload;\r\n        let newCategories = [...state.categoriesData.categories];\r\n        let index = -1;\r\n        newCategories = newCategories.map((category, i) => {\r\n            if (category.id === id) index = i;\r\n            return {...category, clicked: category.id === id}\r\n        })\r\n        return {\r\n            ...state,\r\n            categoriesData: {\r\n                ...state.categoriesData,\r\n                categories: newCategories\r\n            },\r\n            selectedId: id,\r\n            enables: changeDisablesValue(state, false),\r\n            categoryEdit: {\r\n                ...state.categoryEdit,\r\n                editText: newCategories[index].text\r\n            }\r\n        }\r\n    },\r\n    [DESELECT_ITEM]: (state, action) => {\r\n        const newCategories = [...state.categoriesData.categories];\r\n        const { selectedId } = state;\r\n        const index = newCategories.findIndex(category => category.id === selectedId);\r\n        newCategories[index].clicked = false;\r\n        return {\r\n            ...state,\r\n            categoriesData: {\r\n                ...state.categoriesData,\r\n                categories: newCategories\r\n            },\r\n            selectedId: -1,\r\n            enables: changeDisablesValue(state, true),\r\n            categoryEdit: {\r\n                ...state.categoryEdit,\r\n                editText: \"\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default enablesDict;","import { CATEGORIES } from '../../constants/localStorageKeys';\r\nimport { DELETE_CATEGORY } from '../action-types';\r\nimport { changeDisablesValue } from './enableDict';\r\n\r\n\r\nconst deleteDict = {\r\n    [DELETE_CATEGORY]: (state, action) => {\r\n        let deletedCategories = [...state.categoriesData.categories];\r\n        const { selectedId } = state;\r\n        deletedCategories = deletedCategories.filter(category => category.id !== selectedId);\r\n        localStorage.setItem(CATEGORIES, JSON.stringify(deletedCategories));\r\n        return {\r\n            ...state,\r\n            selectedId: -1,\r\n            enables: changeDisablesValue(state, true),\r\n            categoriesData: {\r\n                ...state.categoriesData,\r\n                categories: deletedCategories,\r\n            },\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport default deleteDict;","import { CATEGORIES } from '../../constants/localStorageKeys';\r\nimport { EDIT_CATEGORY, CHANGE_TEXT_EDIT, CHANGE_EDIT_BAR_VISIBILTY } from '../action-types';\r\nimport { changeDisablesValue } from './enableDict';\r\n\r\n\r\nconst editDict = {\r\n    [CHANGE_EDIT_BAR_VISIBILTY]: (state, action) => {\r\n        const { destVisibility: editVisible } = action.payload;\r\n        return {\r\n            ...state,\r\n            categoryEdit: {\r\n                editText: editVisible? state.categoryEdit.editText :\"\",\r\n                editVisible\r\n            }\r\n        }\r\n    },\r\n    [EDIT_CATEGORY]: (state, action) => {\r\n        const editedCategories = [...state.categoriesData.categories];\r\n        const indexFound = editedCategories.findIndex(category => category.id === state.selectedId);\r\n        editedCategories[indexFound].text = state.categoryEdit.editText;\r\n        editedCategories[indexFound].clicked = false;\r\n        localStorage.setItem(CATEGORIES, JSON.stringify(editedCategories));\r\n        return {\r\n            ...state,\r\n            categoriesData: {\r\n                ...state.categoriesData,\r\n                categories: editedCategories\r\n            },\r\n            selectedId: -1,\r\n            enables: changeDisablesValue(state, true),\r\n            categoryEdit: {\r\n                editText: \"\",\r\n                editVisible: false\r\n            }\r\n        }\r\n    },\r\n    [CHANGE_TEXT_EDIT]: (state, action) => {\r\n        const { text: editText } = action.payload;\r\n        return {\r\n            ...state,\r\n            categoryEdit: {\r\n                ...state.categoryEdit,\r\n                editText\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default editDict;","import {\r\n    DELETE_POPUP_VISIBILTY, CREATE_POPUP_VISIBILTY, EDIT_POPUP_VISIBILTY,\r\n    DETAILS_POPUP_VISIBILTY, DELETE_DIALOG_VISIBILTY\r\n} from '../action-types';\r\n\r\n\r\nconst visibiltiesDict = {\r\n    [CREATE_POPUP_VISIBILTY]: (state, action) => {\r\n        const { destVisibility: createPopupVisibilty } = action.payload;\r\n        return {\r\n            ...state,\r\n            visibilties: {\r\n                ...state.visibilties,\r\n                createPopupVisibilty\r\n            }\r\n        }\r\n    },\r\n    [EDIT_POPUP_VISIBILTY]: (state, action) => {\r\n        const { destVisibility: editPopupVisibilty } = action.payload;\r\n        return {\r\n            ...state,\r\n            visibilties: {\r\n                ...state.visibilties,\r\n                editPopupVisibilty\r\n            }\r\n        }\r\n    },\r\n    [DETAILS_POPUP_VISIBILTY]: (state, action) => {\r\n        const { destVisibility: detailsPopupVisibilty } = action.payload;\r\n        return {\r\n            ...state,\r\n            visibilties: {\r\n                ...state.visibilties,\r\n                detailsPopupVisibilty\r\n            }\r\n        }\r\n    },\r\n    [DELETE_POPUP_VISIBILTY]: (state, action) => {\r\n        const { destVisibility: deletePopupVisibilty } = action.payload;\r\n        return {\r\n            ...state,\r\n            visibilties: {\r\n                ...state.visibilties,\r\n                deletePopupVisibilty\r\n            }\r\n        }\r\n    },\r\n    [DELETE_DIALOG_VISIBILTY]: (state, action) => {\r\n        const { destVisibility: deleteDialogVisibilty } = action.payload;\r\n        return {\r\n            ...state,\r\n            visibilties: {\r\n                ...state.visibilties,\r\n                deleteDialogVisibilty\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default visibiltiesDict;","const initialState = {\r\n    categoriesData: {\r\n        categories: [],\r\n        id: 0\r\n    },\r\n    selectedId: -1,\r\n    enables: {\r\n        editDisabled: true,\r\n        createDisabled: false,\r\n        viewDisabled: true,\r\n        deleteDisabled: true\r\n    },\r\n    visibilties: {\r\n        createPopupVisibilty: false,\r\n        editPopupVisibilty: false,\r\n        detailsPopupVisibilty: false,\r\n        deletePopupVisibilty: false,\r\n        deleteDialogVisibilty: false\r\n    },\r\n    categoryCreate: {\r\n        createText: \"\"\r\n    },\r\n    categoryEdit: {\r\n        editText: \"\",\r\n        editVisible: false\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default initialState;","import createAndGetDict from './createAndGetDict';\r\nimport deleteDict from './deleteDict';\r\nimport editDict from './editDict';\r\nimport enablesDict from './enableDict';\r\nimport visibiltiesDict from './visibiltiesDict';\r\nimport initialState from '../initial-state';\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const bigDictionary = {\r\n        ...createAndGetDict,\r\n        ...deleteDict,\r\n        ...editDict,\r\n        ...enablesDict,\r\n        ...visibiltiesDict\r\n    }\r\n\r\n    const updateStore = bigDictionary[action.type];\r\n    if (!updateStore) return state;\r\n    return updateStore(state, action);\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './redux/store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}